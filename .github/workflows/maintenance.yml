name: Automated Maintenance

on:
  schedule:
    # Run monthly on the 1st at 6 AM UTC
    - cron: "0 6 1 * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  # Clean up old artifacts and caches
  cleanup:
    name: Cleanup Old Resources
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: ðŸ”„ Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: ðŸ§¹ Clean up local files
        run: |
          # Remove old build artifacts if they exist
          rm -rf .next/
          rm -rf coverage/
          rm -rf reports/
          rm -rf act-artifacts/
          echo "## ðŸ§¹ Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Removed build artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Cleaned coverage reports" >> $GITHUB_STEP_SUMMARY

  # Generate fresh reports
  reports:
    name: Generate Reports
    runs-on: ubuntu-latest
    needs: cleanup
    timeout-minutes: 15

    steps:
      - name: ðŸ”„ Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: ðŸ“¦ Setup Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v4.0.3
        with:
          node-version: "20"
          cache: "npm"

      - name: ðŸ“¥ Install dependencies
        run: npm ci

      - name: ðŸ“Š Generate project reports
        run: |
          mkdir -p reports

          # TypeScript report
          npm run type-check > reports/typescript-report.txt 2>&1 || true

          # Package info
          npm list --depth=0 > reports/package-tree.txt 2>&1 || true

          # Project stats
          echo "Project Statistics ($(date))" > reports/project-stats.txt
          echo "=============================" >> reports/project-stats.txt
          echo "" >> reports/project-stats.txt
          echo "TypeScript files: $(find src -name '*.ts' -o -name '*.tsx' | wc -l)" >> reports/project-stats.txt
          echo "JavaScript files: $(find src -name '*.js' -o -name '*.jsx' | wc -l)" >> reports/project-stats.txt
          echo "Component files: $(find src -name '*.tsx' | wc -l)" >> reports/project-stats.txt
          echo "Test files: $(find src -name '*.test.*' -o -name '*.spec.*' | wc -l)" >> reports/project-stats.txt
          echo "Total lines of code: $(find src -name '*.ts' -o -name '*.tsx' -o -name '*.js' -o -name '*.jsx' | xargs wc -l | tail -1 | awk '{print $1}')" >> reports/project-stats.txt

      - name: ðŸ“¤ Upload reports
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: monthly-reports
          path: reports/
          retention-days: 30
