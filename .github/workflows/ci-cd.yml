name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  deployments: write
  pull-requests: write
  checks: write
  statuses: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"

jobs:
  # Quality checks and testing
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 📦 Setup Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: |
          npm ci
          npx puppeteer browsers install chrome

      - name: 🔍 Lint code
        run: npm run lint

      - name: 🎨 Check formatting
        run: npm run format:check

      - name: 🔧 Type check
        run: npm run type-check

      - name: 🧪 Run tests
        run: npm run test

      - name: 🏗️ Build project
        run: npm run build

      - name: 📊 Upload test coverage
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  # Deploy to production (only on main branch)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: quality
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 10

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Deploy to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm i -g vercel@latest
          mkdir -p .vercel
          echo '{"orgId":"${{ secrets.VERCEL_ORG_ID }}","projectId":"${{ secrets.VERCEL_PROJECT_ID }}"}' > .vercel/project.json
          DEPLOYMENT_URL=$(vercel --token $VERCEL_TOKEN --prod --yes | grep -oE "https://portfolio-[^[:space:]]*\.vercel\.app" | tail -1)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "🎉 Deployed to: $DEPLOYMENT_URL"

      - name: 🔄 Update deployment URLs
        run: |
          echo "${{ steps.deploy.outputs.deployment_url }}" > deployment-url.txt
          chmod +x ./scripts/update-deployment-urls.sh
          ./scripts/update-deployment-urls.sh

      - name: 📝 Commit URL updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deployment-url.txt public/robots.txt public/sitemap.xml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update deployment URLs [skip ci]"
            git push
          fi

      - name: 📋 Deployment Summary
        run: |
          echo "## 🚀 Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "**Live URL:** ${{ steps.deploy.outputs.deployment_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Time:** $(date)" >> $GITHUB_STEP_SUMMARY
