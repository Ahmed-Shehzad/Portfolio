name: Code Quality

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  # Performance analysis
  performance:
    name: Performance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 📦 Setup Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v4.0.3
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for analysis
        run: npm run build

      - name: 🔍 Bundle analysis
        run: |
          npx @next/bundle-analyzer --help || npm install -g @next/bundle-analyzer
          echo "## 📊 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Bundle analysis completed" >> $GITHUB_STEP_SUMMARY

  # Code complexity analysis
  complexity:
    name: Code Complexity
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 📦 Setup Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v4.0.3
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📏 Analyze code complexity
        run: |
          echo "## 🧮 Code Complexity Analysis" >> $GITHUB_STEP_SUMMARY
          echo "TypeScript files analyzed:" >> $GITHUB_STEP_SUMMARY
          find src -name "*.ts" -o -name "*.tsx" | wc -l >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Total lines of code:" >> $GITHUB_STEP_SUMMARY
          find src -name "*.ts" -o -name "*.tsx" | xargs wc -l | tail -1 >> $GITHUB_STEP_SUMMARY
