name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref != 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        id: deploy-preview
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Comment Preview URL
        uses: actions/github-script@v8
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Preview deployment ready! \n\n📱 **Preview URL**: ${{ steps.deploy-preview.outputs.url }}'
            })

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main')

    environment:
      name: production
      url: https://portfolio-azure-five-75.vercel.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Production to Vercel
        id: deploy-production
        run: echo "url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Create deployment record
        uses: actions/github-script@v8
        continue-on-error: true
        with:
          script: |
            try {
              // Create a deployment record
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha,
                environment: 'production',
                description: 'Production deployment via Vercel',
                auto_merge: false,
                required_contexts: []
              });

              // Create deployment status
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.data.id,
                state: 'success',
                environment_url: '${{ steps.deploy-production.outputs.url }}',
                description: 'Deployment successful'
              });

              console.log(`✅ Deployment created with ID: ${deployment.data.id}`);
              console.log(`🚀 Deployment URL: ${{ steps.deploy-production.outputs.url }}`);
            } catch (error) {
              console.log(`❌ Failed to create deployment record: ${error.message}`);
              console.log(`🚀 Deployment URL: ${{ steps.deploy-production.outputs.url }}`);
            }

      - name: Update deployment URLs
        run: |
          echo "🚀 Production URL: ${{ steps.deploy-production.outputs.url }}"
          echo "✅ Deployment completed successfully!"
          echo "📊 Check deployment status at: https://github.com/${{ github.repository }}/deployments"

      - name: Create deployment comment
        uses: actions/github-script@v8
        continue-on-error: true
        with:
          script: |
            try {
              await github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: `🚀 **Production Deployment Complete**\n\n📱 **Live URL**: ${{ steps.deploy-production.outputs.url }}\n⏰ **Deployed at**: ${new Date().toISOString()}\n🔗 **Commit**: ${context.sha.substring(0, 7)}`
              });
              console.log('✅ Deployment comment created');
            } catch (error) {
              console.log(`❌ Failed to create comment: ${error.message}`);
            }

  lighthouse:
    name: Lighthouse Performance Check
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://portfolio-azure-five-75.vercel.app
            https://portfolio-azure-five-75.vercel.app/en
            https://portfolio-azure-five-75.vercel.app/de
          uploadArtifacts: true
          temporaryPublicStorage: true
