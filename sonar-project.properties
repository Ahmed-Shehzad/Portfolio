## Self-hosted SonarQube configuration
# This file is now tailored for a self-hosted SonarQube instance (not SonarCloud).
# Actions workflow supplies SONAR_HOST_URL + SONAR_TOKEN via repository secrets.
# If you prefer, you can hardcode the server URL below instead of using the secret:
#   sonar.host.url=https://your-sonarqube.example.com
# (Leave it commented when using the GitHub Action with SONAR_HOST_URL.)

sonar.projectKey=portfolio
# For SonarCloud you MUST also set your organization key (uncomment & replace):
# sonar.organization=your_org_key
# sonar.host.url is intentionally omitted so CI can inject SONAR_HOST_URL via env

sonar.projectName=Portfolio
sonar.projectVersion=1.0.0

# Source & test configuration
sonar.sources=src
sonar.exclusions=**/*.test.ts,**/*.test.tsx,**/__tests__/**
sonar.tests=src
sonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/__tests__/**

# TypeScript settings
sonar.language=ts
sonar.typescript.tsconfigPath=tsconfig.json

# Coverage (Vitest / Jest lcov). The workflow creates an empty file if none exists until tests are added.
sonar.javascript.lcov.reportPaths=coverage/lcov.info
sonar.typescript.lcov.reportPaths=coverage/lcov.info

# Encoding
sonar.sourceEncoding=UTF-8

# Optional: tighten rule set (uncomment & adjust)
# sonar.issue.ignore.multicriteria=e1
# sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S117
# sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts
